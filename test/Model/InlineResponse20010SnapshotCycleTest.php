<?php
/**
 * InlineResponse20010SnapshotCycleTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  IdeaEngine\TzStats
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * TZstats
 *
 * API for TZstats.com
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tezos@whafor.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace IdeaEngine\TzStats\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * InlineResponse20010SnapshotCycleTest Class Doc Comment
 *
 * @category    Class
 * @description InlineResponse20010SnapshotCycle
 * @package     IdeaEngine\TzStats
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class InlineResponse20010SnapshotCycleTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "InlineResponse20010SnapshotCycle"
     */
    public function testInlineResponse20010SnapshotCycle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cycle"
     */
    public function testPropertyCycle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "start_height"
     */
    public function testPropertyStartHeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "end_height"
     */
    public function testPropertyEndHeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "start_time"
     */
    public function testPropertyStartTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "end_time"
     */
    public function testPropertyEndTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "progress"
     */
    public function testPropertyProgress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_complete"
     */
    public function testPropertyIsComplete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_snapshot"
     */
    public function testPropertyIsSnapshot()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_active"
     */
    public function testPropertyIsActive()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "snapshot_height"
     */
    public function testPropertySnapshotHeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "snapshot_index"
     */
    public function testPropertySnapshotIndex()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "snapshot_time"
     */
    public function testPropertySnapshotTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rolls"
     */
    public function testPropertyRolls()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "roll_owners"
     */
    public function testPropertyRollOwners()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "active_delegators"
     */
    public function testPropertyActiveDelegators()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "active_bakers"
     */
    public function testPropertyActiveBakers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "staking_supply"
     */
    public function testPropertyStakingSupply()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "staking_percent"
     */
    public function testPropertyStakingPercent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "working_bakers"
     */
    public function testPropertyWorkingBakers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "working_endorsers"
     */
    public function testPropertyWorkingEndorsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_priorities"
     */
    public function testPropertyMissedPriorities()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "missed_endorsements"
     */
    public function testPropertyMissedEndorsements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "n_double_baking"
     */
    public function testPropertyNDoubleBaking()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "n_double_endorsement"
     */
    public function testPropertyNDoubleEndorsement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "n_orphans"
     */
    public function testPropertyNOrphans()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "solvetime_min"
     */
    public function testPropertySolvetimeMin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "solvetime_max"
     */
    public function testPropertySolvetimeMax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "solvetime_mean"
     */
    public function testPropertySolvetimeMean()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "priority_min"
     */
    public function testPropertyPriorityMin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "priority_max"
     */
    public function testPropertyPriorityMax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "priority_mean"
     */
    public function testPropertyPriorityMean()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "endorsement_rate"
     */
    public function testPropertyEndorsementRate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "endorsements_min"
     */
    public function testPropertyEndorsementsMin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "endorsements_max"
     */
    public function testPropertyEndorsementsMax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "endorsements_mean"
     */
    public function testPropertyEndorsementsMean()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "seed_rate"
     */
    public function testPropertySeedRate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "worst_baked_block"
     */
    public function testPropertyWorstBakedBlock()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "worst_endorsed_block"
     */
    public function testPropertyWorstEndorsedBlock()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
